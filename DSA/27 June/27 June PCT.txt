27 June PCT

1.
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* dummy = new ListNode(0);
        ListNode* temp = dummy ;
        int carry = 0 ;

        while(l1 != NULL || l2 != NULL || carry){
            int sum = carry;
            if(l1){
                sum += l1->val;
                l1= l1->next;
            }
            if(l2){
                sum += l2->val;
                l2= l2->next;
            }

            carry = sum / 10 ;
            temp->next = new ListNode(sum % 10);
            temp = temp->next;
        }
        return dummy->next;
    }
};

2. 
class Solution {
public:
    int pairSum(ListNode* head) {
        ListNode* slow = head ;
        ListNode* fast = head ; 
        while(fast != NULL && fast->next!= NULL){
            slow = slow->next;
            fast = fast->next->next;
        }
        ListNode* prev = NULL;
        while(slow!=NULL){
            ListNode* next = slow->next;
            slow->next = prev ; 
            prev = slow;
            slow = next;
        }
        int maxsum = 0 ;
        ListNode* first = head;
        ListNode* second = prev;
        while(second){
            maxsum = max(maxsum , first->val + second->val);
            first = first->next;
            second = second->next ; 
        }
        return maxsum;
    }
};

